name: Test
on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu-latest"
          - os: "macos-latest"
          - os: "windows-latest"
    steps:
      - name: Checkout latest revision
        uses: actions/checkout@v2
        with:
          repository: lamyj/sycomore
          fetch-depth: 0
      # - name: Set up Python
      #   uses: actions/setup-python@v2
      - name: Set-up Python
        run: |
          python3 -m pip install cibuildwheel
      - name: xxx
        shell: "python3 {0} 3.9"
        run: |
          import os
          import subprocess
          import sys
          import tempfile
          import urllib.request

          # import cibuildwheel.macos

          version = sys.argv[1]

          if sys.platform.startswith("linux"):
              # Assume we are running in manylinux
              roots = {
                  "3.6": "/opt/python/cp36-cp36m/bin",
                  "3.7": "/opt/python/cp37-cp37m/bin",
                  "3.8": "/opt/python/cp38-cp38/bin",
                  "3.9": "/opt/python/cp39-cp39/bin",
              }
              if version not in roots:
                  raise NotImplementedError(
                      "Unknown interpreter version: {0}".format(version))

              print(roots[version])
          elif sys.platform == "darwin":
              # Assume x86_64
              # From https://github.com/pypa/cibuildwheel/blob/v1.11.0/cibuildwheel/resources/build-platforms.toml#L37-L50
              urls = {
                  "3.6": "https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg",
                  "3.7": "https://www.python.org/ftp/python/3.7.9/python-3.7.9-macosx10.9.pkg",
                  "3.8": "https://www.python.org/ftp/python/3.8.10/python-3.8.10-macosx10.9.pkg",
                  "3.9": "https://www.python.org/ftp/python/3.9.5/python-3.9.5-macos11.pkg",
              }
              if version not in urls:
                  raise NotImplementedError("Unknown interpreter version: {0}".format(version))

              with tempfile.TemporaryDirectory() as directory:
                  data = urllib.request.urlopen(urls[version]).read()
                  path = os.path.join(directory, urls[version].split("/")[-1])
                  with open(path, "wb") as fd:
                      fd.write(data)
                  subprocess.check_call([
                      "sudo", "installer", "-pkg", path, "-target", "/"])

              # # FIXME: download, then sudo installer -pkg XXX.pkg
              # cibuildwheel.macos.install_cpython(version, urls[version])
              # print(cibuildwheel.macos.SYMLINKS_DIR)
          elif sys.platform == "win32":
              versions = {
                  "3.6": "3.6.8",
                  "3.7": "3.7.9",
                  "3.8": "3.8.10",
                  "3.9": "3.9.5",
              }
              if version not in versions:
                  raise NotImplementedError(
                      "Unknown interpreter version: {0}".format(version))

              subprocess.check_call([
                  "nuget", "install", "python", 
                  "-Version", version, "-OutputDirectory", "C:\\wheel_python", 
                  "-Verbosity", "quiet"])
              print("C:\\wheel_python")
          else:
              raise NotImplementedError(sys.platform)
